<?php

namespace common\models;

use Yii;
use common\models\Pic;

/**
 * This is the model class for table "link_pic".
 *
 * @property int $id id
 * @property int $link_id
 * @property int $pic_id
 */
class LinkPic extends \yii\db\ActiveRecord
{

    const SCENARIO_ADMIN_CREATE = '2';//后台管理员新增
    const SCENARIO_ADMIN_UPDATE = '3';//后台管理员更新
    const SCENARIO_JQ_UPLOAD = '4';//JQ上传场景
    public $file;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'link_pic';
    }


    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['link_id', 'pic_id'], 'integer'],
            UploadImg::rules('file', ['maxSize' => 3000000, 'skipOnEmpty' => true, 'minWidth' => 900, 'minHeight' => 600]),
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('common', 'ID'),
            'link_id' => Yii::t('common', 'Link ID'),
            'pic_id' => Yii::t('common', 'Pic ID'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function scenarios()
    {
        $scenarios = parent::scenarios(); // TODO: Change the autogenerated stub


        //后台场景
        $scenarios[self::SCENARIO_ADMIN_CREATE] = [
            'bs_id', 'file'
        ];
        $scenarios[self::SCENARIO_ADMIN_UPDATE] = [
            'bs_id', 'pic_id', 'file'
        ];
        //JQ上传
        $scenarios[self::SCENARIO_JQ_UPLOAD] = [
            'link_id', 'pic_id', 'file'
        ];
        return $scenarios;
    }


    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPic()
    {
        return $this->hasOne(Pic::className(), ['id' => 'pic_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPicPath()
    {
        if ($this->pic_id) {
            return Yii::$app->params['web_cdn'] . $this->pic->path;
        } else {
            return Yii::$app->params['web_cdn'] . 'common/img/goods-nopic.jpg';
        }
    }

    //返回当前所有图片id
    public function getAllPic($id)
    {
        $all = self::findAll(['link_id' => $id]);
        $arr = [];
        foreach ($all as $k => $v) {
            $a = Pic::find()->where(['id' => $v->pic_id])->one();//var_dump($a);
            $arr[] =$a->id;
        }
        return $arr;
    }


}
